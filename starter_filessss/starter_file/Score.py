# ---------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# ---------------------------------------------------------
import json
import logging
import os
import pickle
import numpy as np
import pandas as pd
import joblib

import azureml.automl.core
from azureml.automl.core.shared import logging_utilities, log_server
from azureml.telemetry import INSTRUMENTATION_KEY

from inference_schema.schema_decorators import input_schema, output_schema
from inference_schema.parameter_types.numpy_parameter_type import NumpyParameterType
from inference_schema.parameter_types.pandas_parameter_type import PandasParameterType


input_sample = pd.DataFrame({"total_cases": pd.Series([0.0], dtype="float64"), "total_deaths": pd.Series([0.0], dtype="float64"), "new_deaths": pd.Series([0.0], dtype="float64"), "new_deaths_smoothed": pd.Series([0.0], dtype="float64"), "total_cases_per_million": pd.Series([0.0], dtype="float64"), "total_deaths_per_million": pd.Series([0.0], dtype="float64"), "new_deaths_per_million": pd.Series([0.0], dtype="float64"), "new_deaths_smoothed_per_million": pd.Series([0.0], dtype="float64"), "reproduction_rate": pd.Series([0.0], dtype="float64"), "icu_patients": pd.Series([0.0], dtype="float64"), "icu_patients_per_million": pd.Series([0.0], dtype="float64"), "hosp_patients": pd.Series([0.0], dtype="float64"), "new_tests": pd.Series([0.0], dtype="float64"), "total_tests": pd.Series([0.0], dtype="float64"), "total_tests_per_thousand": pd.Series([0.0], dtype="float64"), "positive_rate": pd.Series([0.0], dtype="float64"), "tests_per_case": pd.Series([0.0], dtype="float64"), "stringency_index": pd.Series([0.0], dtype="float64"), "population": pd.Series([0.0], dtype="float64"), "population_density": pd.Series([0.0], dtype="float64"), "median_age": pd.Series([0.0], dtype="float64"), "aged_65_older": pd.Series([0.0], dtype="float64"), "aged_70_older": pd.Series([0.0], dtype="float64"), "gdp_per_capita": pd.Series([0.0], dtype="float64"), "extreme_poverty": pd.Series([0.0], dtype="float64"), "cardiovasc_death_rate": pd.Series([0.0], dtype="float64"), "diabetes_prevalence": pd.Series([0.0], dtype="float64"), "female_smokers": pd.Series([0.0], dtype="float64"), "male_smokers": pd.Series([0.0], dtype="float64"), "handwashing_facilities": pd.Series([0.0], dtype="float64"), "hospital_beds_per_thousand": pd.Series([0.0], dtype="float64"), "life_expectancy": pd.Series([0.0], dtype="float64"), "human_development_index": pd.Series([0.0], dtype="float64"), "testing_units": pd.Series([0], dtype="int64"), "iso_code_AFG": pd.Series([0], dtype="int64"), "iso_code_AGO": pd.Series([0], dtype="int64"), "iso_code_AIA": pd.Series([0], dtype="int64"), "iso_code_ALB": pd.Series([0], dtype="int64"), "iso_code_AND": pd.Series([0], dtype="int64"), "iso_code_ARE": pd.Series([0], dtype="int64"), "iso_code_ARG": pd.Series([0], dtype="int64"), "iso_code_ARM": pd.Series([0], dtype="int64"), "iso_code_ATG": pd.Series([0], dtype="int64"), "iso_code_AUS": pd.Series([0], dtype="int64"), "iso_code_AUT": pd.Series([0], dtype="int64"), "iso_code_AZE": pd.Series([0], dtype="int64"), "iso_code_BDI": pd.Series([0], dtype="int64"), "iso_code_BEL": pd.Series([0], dtype="int64"), "iso_code_BEN": pd.Series([0], dtype="int64"), "iso_code_BFA": pd.Series([0], dtype="int64"), "iso_code_BGD": pd.Series([0], dtype="int64"), "iso_code_BGR": pd.Series([0], dtype="int64"), "iso_code_BHR": pd.Series([0], dtype="int64"), "iso_code_BHS": pd.Series([0], dtype="int64"), "iso_code_BIH": pd.Series([0], dtype="int64"), "iso_code_BLR": pd.Series([0], dtype="int64"), "iso_code_BLZ": pd.Series([0], dtype="int64"), "iso_code_BMU": pd.Series([0], dtype="int64"), "iso_code_BOL": pd.Series([0], dtype="int64"), "iso_code_BRA": pd.Series([0], dtype="int64"), "iso_code_BRB": pd.Series([0], dtype="int64"), "iso_code_BRN": pd.Series([0], dtype="int64"), "iso_code_BTN": pd.Series([0], dtype="int64"), "iso_code_BWA": pd.Series([0], dtype="int64"), "iso_code_CAF": pd.Series([0], dtype="int64"), "iso_code_CAN": pd.Series([0], dtype="int64"), "iso_code_CHE": pd.Series([0], dtype="int64"), "iso_code_CHL": pd.Series([0], dtype="int64"), "iso_code_CHN": pd.Series([0], dtype="int64"), "iso_code_CIV": pd.Series([0], dtype="int64"), "iso_code_CMR": pd.Series([0], dtype="int64"), "iso_code_COD": pd.Series([0], dtype="int64"), "iso_code_COG": pd.Series([0], dtype="int64"), "iso_code_COL": pd.Series([0], dtype="int64"), "iso_code_COM": pd.Series([0], dtype="int64"), "iso_code_CPV": pd.Series([0], dtype="int64"), "iso_code_CRI": pd.Series([0], dtype="int64"), "iso_code_CUB": pd.Series([0], dtype="int64"), "iso_code_CYM": pd.Series([0], dtype="int64"), "iso_code_CYP": pd.Series([0], dtype="int64"), "iso_code_CZE": pd.Series([0], dtype="int64"), "iso_code_DEU": pd.Series([0], dtype="int64"), "iso_code_DJI": pd.Series([0], dtype="int64"), "iso_code_DMA": pd.Series([0], dtype="int64"), "iso_code_DNK": pd.Series([0], dtype="int64"), "iso_code_DOM": pd.Series([0], dtype="int64"), "iso_code_DZA": pd.Series([0], dtype="int64"), "iso_code_ECU": pd.Series([0], dtype="int64"), "iso_code_EGY": pd.Series([0], dtype="int64"), "iso_code_ERI": pd.Series([0], dtype="int64"), "iso_code_ESP": pd.Series([0], dtype="int64"), "iso_code_EST": pd.Series([0], dtype="int64"), "iso_code_ETH": pd.Series([0], dtype="int64"), "iso_code_FIN": pd.Series([0], dtype="int64"), "iso_code_FJI": pd.Series([0], dtype="int64"), "iso_code_FLK": pd.Series([0], dtype="int64"), "iso_code_FRA": pd.Series([0], dtype="int64"), "iso_code_FRO": pd.Series([0], dtype="int64"), "iso_code_FSM": pd.Series([0], dtype="int64"), "iso_code_GAB": pd.Series([0], dtype="int64"), "iso_code_GBR": pd.Series([0], dtype="int64"), "iso_code_GEO": pd.Series([0], dtype="int64"), "iso_code_GGY": pd.Series([0], dtype="int64"), "iso_code_GHA": pd.Series([0], dtype="int64"), "iso_code_GIB": pd.Series([0], dtype="int64"), "iso_code_GIN": pd.Series([0], dtype="int64"), "iso_code_GMB": pd.Series([0], dtype="int64"), "iso_code_GNB": pd.Series([0], dtype="int64"), "iso_code_GNQ": pd.Series([0], dtype="int64"), "iso_code_GRC": pd.Series([0], dtype="int64"), "iso_code_GRD": pd.Series([0], dtype="int64"), "iso_code_GRL": pd.Series([0], dtype="int64"), "iso_code_GTM": pd.Series([0], dtype="int64"), "iso_code_GUY": pd.Series([0], dtype="int64"), "iso_code_HKG": pd.Series([0], dtype="int64"), "iso_code_HND": pd.Series([0], dtype="int64"), "iso_code_HRV": pd.Series([0], dtype="int64"), "iso_code_HTI": pd.Series([0], dtype="int64"), "iso_code_HUN": pd.Series([0], dtype="int64"), "iso_code_IDN": pd.Series([0], dtype="int64"), "iso_code_IMN": pd.Series([0], dtype="int64"), "iso_code_IND": pd.Series([0], dtype="int64"), "iso_code_IRL": pd.Series([0], dtype="int64"), "iso_code_IRN": pd.Series([0], dtype="int64"), "iso_code_IRQ": pd.Series([0], dtype="int64"), "iso_code_ISL": pd.Series([0], dtype="int64"), "iso_code_ISR": pd.Series([0], dtype="int64"), "iso_code_ITA": pd.Series([0], dtype="int64"), "iso_code_JAM": pd.Series([0], dtype="int64"), "iso_code_JEY": pd.Series([0], dtype="int64"), "iso_code_JOR": pd.Series([0], dtype="int64"), "iso_code_JPN": pd.Series([0], dtype="int64"), "iso_code_KAZ": pd.Series([0], dtype="int64"), "iso_code_KEN": pd.Series([0], dtype="int64"), "iso_code_KGZ": pd.Series([0], dtype="int64"), "iso_code_KHM": pd.Series([0], dtype="int64"), "iso_code_KNA": pd.Series([0], dtype="int64"), "iso_code_KOR": pd.Series([0], dtype="int64"), "iso_code_KWT": pd.Series([0], dtype="int64"), "iso_code_LAO": pd.Series([0], dtype="int64"), "iso_code_LBN": pd.Series([0], dtype="int64"), "iso_code_LBR": pd.Series([0], dtype="int64"), "iso_code_LBY": pd.Series([0], dtype="int64"), "iso_code_LCA": pd.Series([0], dtype="int64"), "iso_code_LIE": pd.Series([0], dtype="int64"), "iso_code_LKA": pd.Series([0], dtype="int64"), "iso_code_LSO": pd.Series([0], dtype="int64"), "iso_code_LTU": pd.Series([0], dtype="int64"), "iso_code_LUX": pd.Series([0], dtype="int64"), "iso_code_LVA": pd.Series([0], dtype="int64"), "iso_code_MAC": pd.Series([0], dtype="int64"), "iso_code_MAR": pd.Series([0], dtype="int64"), "iso_code_MCO": pd.Series([0], dtype="int64"), "iso_code_MDA": pd.Series([0], dtype="int64"), "iso_code_MDG": pd.Series([0], dtype="int64"), "iso_code_MDV": pd.Series([0], dtype="int64"), "iso_code_MEX": pd.Series([0], dtype="int64"), "iso_code_MHL": pd.Series([0], dtype="int64"), "iso_code_MKD": pd.Series([0], dtype="int64"), "iso_code_MLI": pd.Series([0], dtype="int64"), "iso_code_MLT": pd.Series([0], dtype="int64"), "iso_code_MMR": pd.Series([0], dtype="int64"), "iso_code_MNE": pd.Series([0], dtype="int64"), "iso_code_MNG": pd.Series([0], dtype="int64"), "iso_code_MOZ": pd.Series([0], dtype="int64"), "iso_code_MRT": pd.Series([0], dtype="int64"), "iso_code_MSR": pd.Series([0], dtype="int64"), "iso_code_MUS": pd.Series([0], dtype="int64"), "iso_code_MWI": pd.Series([0], dtype="int64"), "iso_code_MYS": pd.Series([0], dtype="int64"), "iso_code_NAM": pd.Series([0], dtype="int64"), "iso_code_NER": pd.Series([0], dtype="int64"), "iso_code_NGA": pd.Series([0], dtype="int64"), "iso_code_NIC": pd.Series([0], dtype="int64"), "iso_code_NLD": pd.Series([0], dtype="int64"), "iso_code_NOR": pd.Series([0], dtype="int64"), "iso_code_NPL": pd.Series([0], dtype="int64"), "iso_code_NZL": pd.Series([0], dtype="int64"), "iso_code_OMN": pd.Series([0], dtype="int64"), "iso_code_OWID_AFR": pd.Series([0], dtype="int64"), "iso_code_OWID_ASI": pd.Series([0], dtype="int64"), "iso_code_OWID_CYN": pd.Series([0], dtype="int64"), "iso_code_OWID_EUN": pd.Series([0], dtype="int64"), "iso_code_OWID_EUR": pd.Series([0], dtype="int64"), "iso_code_OWID_INT": pd.Series([0], dtype="int64"), "iso_code_OWID_KOS": pd.Series([0], dtype="int64"), "iso_code_OWID_NAM": pd.Series([0], dtype="int64"), "iso_code_OWID_OCE": pd.Series([0], dtype="int64"), "iso_code_OWID_SAM": pd.Series([0], dtype="int64"), "iso_code_OWID_WRL": pd.Series([0], dtype="int64"), "iso_code_PAK": pd.Series([0], dtype="int64"), "iso_code_PAN": pd.Series([0], dtype="int64"), "iso_code_PER": pd.Series([0], dtype="int64"), "iso_code_PHL": pd.Series([0], dtype="int64"), "iso_code_PNG": pd.Series([0], dtype="int64"), "iso_code_POL": pd.Series([0], dtype="int64"), "iso_code_PRT": pd.Series([0], dtype="int64"), "iso_code_PRY": pd.Series([0], dtype="int64"), "iso_code_PSE": pd.Series([0], dtype="int64"), "iso_code_QAT": pd.Series([0], dtype="int64"), "iso_code_ROU": pd.Series([0], dtype="int64"), "iso_code_RUS": pd.Series([0], dtype="int64"), "iso_code_RWA": pd.Series([0], dtype="int64"), "iso_code_SAU": pd.Series([0], dtype="int64"), "iso_code_SDN": pd.Series([0], dtype="int64"), "iso_code_SEN": pd.Series([0], dtype="int64"), "iso_code_SGP": pd.Series([0], dtype="int64"), "iso_code_SHN": pd.Series([0], dtype="int64"), "iso_code_SLB": pd.Series([0], dtype="int64"), "iso_code_SLE": pd.Series([0], dtype="int64"), "iso_code_SLV": pd.Series([0], dtype="int64"), "iso_code_SMR": pd.Series([0], dtype="int64"), "iso_code_SOM": pd.Series([0], dtype="int64"), "iso_code_SRB": pd.Series([0], dtype="int64"), "iso_code_SSD": pd.Series([0], dtype="int64"), "iso_code_STP": pd.Series([0], dtype="int64"), "iso_code_SUR": pd.Series([0], dtype="int64"), "iso_code_SVK": pd.Series([0], dtype="int64"), "iso_code_SVN": pd.Series([0], dtype="int64"), "iso_code_SWE": pd.Series([0], dtype="int64"), "iso_code_SWZ": pd.Series([0], dtype="int64"), "iso_code_SYC": pd.Series([0], dtype="int64"), "iso_code_SYR": pd.Series([0], dtype="int64"), "iso_code_TCA": pd.Series([0], dtype="int64"), "iso_code_TCD": pd.Series([0], dtype="int64"), "iso_code_TGO": pd.Series([0], dtype="int64"), "iso_code_THA": pd.Series([0], dtype="int64"), "iso_code_TJK": pd.Series([0], dtype="int64"), "iso_code_TLS": pd.Series([0], dtype="int64"), "iso_code_TTO": pd.Series([0], dtype="int64"), "iso_code_TUN": pd.Series([0], dtype="int64"), "iso_code_TUR": pd.Series([0], dtype="int64"), "iso_code_TWN": pd.Series([0], dtype="int64"), "iso_code_TZA": pd.Series([0], dtype="int64"), "iso_code_UGA": pd.Series([0], dtype="int64"), "iso_code_UKR": pd.Series([0], dtype="int64"), "iso_code_URY": pd.Series([0], dtype="int64"), "iso_code_USA": pd.Series([0], dtype="int64"), "iso_code_UZB": pd.Series([0], dtype="int64"), "iso_code_VAT": pd.Series([0], dtype="int64"), "iso_code_VCT": pd.Series([0], dtype="int64"), "iso_code_VEN": pd.Series([0], dtype="int64"), "iso_code_VNM": pd.Series([0], dtype="int64"), "iso_code_VUT": pd.Series([0], dtype="int64"), "iso_code_WSM": pd.Series([0], dtype="int64"), "iso_code_YEM": pd.Series([0], dtype="int64"), "iso_code_ZAF": pd.Series([0], dtype="int64"), "iso_code_ZMB": pd.Series([0], dtype="int64"), "iso_code_ZWE": pd.Series([0], dtype="int64"), "continent_0": pd.Series([0], dtype="int64"), "continent_Africa": pd.Series([0], dtype="int64"), "continent_Asia": pd.Series([0], dtype="int64"), "continent_Europe": pd.Series([0], dtype="int64"), "continent_North America": pd.Series([0], dtype="int64"), "continent_Oceania": pd.Series([0], dtype="int64"), "continent_South America": pd.Series([0], dtype="int64")})
output_sample = np.array([0])
try:
    log_server.enable_telemetry(INSTRUMENTATION_KEY)
    log_server.set_verbosity('INFO')
    logger = logging.getLogger('azureml.automl.core.scoring_script')
except:
    pass


def init():
    global model
    # This name is model.id of model that we want to deploy deserialize the model file back
    # into a sklearn model
    model_path = os.path.join(os.getenv('AZUREML_MODEL_DIR'), 'model.pkl')
    path = os.path.normpath(model_path)
    path_split = path.split(os.sep)
    log_server.update_custom_dimensions({'model_name': path_split[-3], 'model_version': path_split[-2]})
    try:
        logger.info("Loading model from path.")
        model = joblib.load(model_path)
        logger.info("Loading successful.")
    except Exception as e:
        logging_utilities.log_traceback(e, logger)
        raise


@input_schema('data', PandasParameterType(input_sample))
@output_schema(NumpyParameterType(output_sample))
def run(data):
    try:
        result = model.predict(data)
        return json.dumps({"result": result.tolist()})
    except Exception as e:
        result = str(e)
        return json.dumps({"error": result})
